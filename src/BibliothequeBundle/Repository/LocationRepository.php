<?php

namespace BibliothequeBundle\Repository;

/**
 * LocationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LocationRepository extends \Doctrine\ORM\EntityRepository
{

    public function myfindAll($id)
    {
        $query = $this->getEntityManager()->createQuery("select m from BibliothequeBundle:Location m where m.Locataire='$id'");
        return $query->getResult();
    }

    public function findLocationEnCours()
    {

        $query = $this->getEntityManager()->createQuery("select m from BibliothequeBundle:Location m where m.etat='En cours'");
        return $query->getResult();


    }
    public function annulerlocationpasse(){
   $date= new \DateTime('now');
     $d=$date->format('Y-m-d');
//var_dump($d);
        $query = $this->getEntityManager()
            ->createQuery("UPDATE BibliothequeBundle:Location m SET m.etat = :valid WHERE m.etat= :encours AND m.dateLocation <'$d' ");
        $query->setParameter('encours', 'En cours');
        $query->setParameter('valid', 'Annuler');
        $query->execute();

    }

    public function rendue($id)
    {
        $query = $this->getEntityManager()
            ->createQuery("UPDATE BibliothequeBundle:Location m SET m.etat = :valid WHERE m.id = :id");
        $query->setParameter('valid', 'Rendu');
        $query->setParameter('id', $id);
        $query->execute();
    }

    public function findLocationEnCoursParId($id)
    {

        $query = $this->getEntityManager()->createQuery("select m from BibliothequeBundle:Location m where m.etat='En cours' and m.id='$id'");
        return $query->getResult();


    }

    public function findLocationEnCoursParIdUser($id)
    {

        $query = $this->getEntityManager()->createQuery("select m from BibliothequeBundle:Location m JOIN AppBundle:User p where m.etat='En cours' and p.id=$id");
        return $query->getResult();


    }

    public function findLocationValider()
    {
        $query = $this->getEntityManager()->createQuery("select m from BibliothequeBundle:Location m where m.etat='Valider'");
        return $query->getResult();
    }

    public function findLocationParid($id)
    {
        $query = $this->getEntityManager()->createQuery("select m from BibliothequeBundle:Location m where m.id='$id'");
        return $query->getResult();
    }

    public function findLocationParidLivreetUser($id, $username)
    {
        $query = $this->getEntityManager()->createQuery("select m from BibliothequeBundle:Location m JOIN AppBundle:User p where m.Livre='$id' and m.Locataire=p.id AND p.username='$username'");
        return $query->getResult();

    }

    public function getBestLocations()
    {
        $query = $this->getEntityManager()->createQuery("select count(a), IDENTITY(a.Livre)  from BibliothequeBundle:Location a group by a.Livre");
        return $query->getResult();

    }
    public function GetStat()
    {
        $query = $this->getEntityManager()->createQuery("select count(a) as nbLocation,l.titre  from BibliothequeBundle:Location a JOIN BibliothequeBundle:Livre l where a.Livre=l.id and (a.etat Like 'Rendu' or a.etat LIKE 'Valider' or a.etat LIKE 'En cours') group by a.Livre")->setMaxResults(4);
        return $query->getResult();

    }
    public function Meslocations($id){
        $query = $this->getEntityManager()->createQuery("select l from BibliothequeBundle:Location m JOIN BibliothequeBundle:Livre l where m.Locataire='$id' AND l.id=m.Livre");
        return $query->getResult();
    }
    public function LocationValiders($id){
        $date= new \DateTime('now');
        $d=$date->format('Y-m-d');
        $query = $this->getEntityManager()->createQuery("select m from BibliothequeBundle:Location m JOIN AppBundle:User p where m.Locataire='$id' AND m.etat LIKE 'Valider' AND m.dateRetour <'$d'");
        return $query->getResult();

    }
    public function LocationEnCoursParUSername($username){
        $query = $this->getEntityManager()->createQuery("select m from BibliothequeBundle:Location m JOIN AppBundle:User p where m.Locataire=p.id AND p.username='$username' AND m.etat='En cours'");
        return $query->getResult();
    }

    public function LocationValiderParUSername($username){
        $query = $this->getEntityManager()->createQuery("select m from BibliothequeBundle:Location m JOIN AppBundle:User p where m.Locataire=p.id AND p.username='$username' AND m.etat='Valider'");
        return $query->getResult();
    }
}
